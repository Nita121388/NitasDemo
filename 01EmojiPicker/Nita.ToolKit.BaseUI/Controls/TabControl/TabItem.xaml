<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:Nita.ToolKit.BaseUI.Converters"
    xmlns:nb="clr-namespace:Nita.ToolKit.BaseUI.Controls.Border"
    xmlns:ni="clr-namespace:Nita.ToolKit.BaseUI.Controls.Icon"
    xmlns:nita="clr-namespace:Nita.ToolKit.BaseUI.Controls.TabControl">

    <!--#region MergedDictionaries-->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Nita.ToolKit.BaseUI;component/Style/Base.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--#endregion-->

    <!--#region Converter-->
    <converter:ButtonModeConverter x:Key="ButtonModeConverter" />
    <converter:SizeTypeConverter x:Key="SizeTypeConverter" />
    <!--#endregion-->

    <!--#region NitaTabItemIconStyle-->
    <Style
        x:Key="NitaTabItemIconStyle"
        BasedOn="{StaticResource {x:Type ni:Icon}}"
        TargetType="{x:Type ni:Icon}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,2,2" />
        <Setter Property="SizeType" Value="{Binding HeaderSizeType, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Source" Value="{Binding Icon, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type nita:TabItem}}}" />
        <Setter Property="Visibility" Value="{Binding HeaderContentMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type nita:TabItem}}, Converter={StaticResource ButtonModeConverter}, ConverterParameter=Icon}" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <!--#endregion-->

    <!--#region NitaTabItemLabelStyle-->
    <Style
        x:Key="NitaTabItemLabelStyle"
        BasedOn="{StaticResource {x:Type Label}}"
        TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="0,0,2,0" />
        <Setter Property="Content" Value="{Binding HeaderText, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type nita:TabItem}}}" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{Binding HeaderSizeType, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type nita:TabItem}}, Converter={StaticResource SizeTypeConverter}, ConverterParameter=Text}" />
        <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Visibility" Value="{Binding HeaderContentMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type nita:TabItem}}, Converter={StaticResource ButtonModeConverter}, ConverterParameter=Text}" />
    </Style>
    <!--#endregion-->

    <!--#region NitaTabItemHeaderBorderStyle-->
    <Style
        x:Key="NitaTabItemHeaderBorderStyle"
        BasedOn="{StaticResource {x:Type nb:Border}}"
        TargetType="{x:Type nb:Border}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="4,4,4,0" />
        <Setter Property="Padding" Value="4,3,3,4" />
        <Setter Property="CornerRadius" Value="{DynamicResource HeaderCornerRadius}" />
        <Setter Property="BorderThickness" Value="{DynamicResource HeaderBorder}" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <!--#endregion-->

    <!--#region NitaTabItem-->
    <Style
        x:Key="NitaTabItemStyle"
        TargetType="{x:Type nita:TabItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Background" Value="#FFFFFF" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type nita:TabItem}">
                    <nb:Border
                        x:Name="headerBorder"
                        Style="{StaticResource NitaTabItemHeaderBorderStyle}">
                        <StackPanel
                            x:Name="headerStackPanel"
                            Orientation="{Binding Orientation,
                                                  RelativeSource={RelativeSource FindAncestor,
                                                                                 AncestorType={x:Type nita:TabControl}}}">
                            <ni:Icon
                                x:Name="PART_Icon"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Style="{StaticResource NitaTabItemIconStyle}" />
                            <Label
                                x:Name="PART_Text"
                                Style="{StaticResource NitaTabItemLabelStyle}" />
                        </StackPanel>
                    </nb:Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="headerBorder" Property="Cursor" Value="Hand" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="headerBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="headerBorder" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                                        <RotateTransform Angle="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

</ResourceDictionary>