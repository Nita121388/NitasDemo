<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:Nita.ToolKit.BaseUI.Converters"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:nb="clr-namespace:Nita.ToolKit.BaseUI.Controls.Button"
    xmlns:nbo="clr-namespace:Nita.ToolKit.BaseUI.Controls.Border"
    xmlns:ncc="clr-namespace:Nita.ToolKit.BaseUI.Controls.ClickCanvas"
    xmlns:ni="clr-namespace:Nita.ToolKit.BaseUI.Controls.Icon"
    xmlns:nita="clr-namespace:Nita.ToolKit.BaseUI.Controls.TextBox"
    xmlns:nt="clr-namespace:Nita.ToolKit.BaseUI.Controls.ToolTip">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Nita.ToolKit.BaseUI;component/Style/Base.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converter:ButtonModeConverter x:Key="ButtonModeConverter" />
    <converter:IconPositionToVisiblityConverter x:Key="IconPositionToVisiblityConverter" />
    <converter:SizeTypeConverter x:Key="SizeTypeConverter" />
    <converter:TooltipVisibilityConverter x:Key="TooltipVisibilityConverter" />
    <!--#region NitaTextBox-->

    <!--#region NitaTextBox_IconStyle-->
    <Style
        x:Key="NitaTextBoxLeftIconStyle"
        BasedOn="{StaticResource {x:Type ni:Icon}}"
        TargetType="{x:Type ni:Icon}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="SizeType" Value="{Binding SizeType, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Source" Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Visibility" Value="{Binding ContentMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type nita:TextBox}}, Converter={StaticResource ButtonModeConverter}, ConverterParameter=Icon}" />
        <Setter Property="Visibility" Value="{Binding IconPosition, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type nita:TextBox}}, Converter={StaticResource IconPositionToVisiblityConverter}, ConverterParameter=Left}" />
    </Style>
    <!--#endregion NitaTextBox_IconStyle-->

    <!--#region NitaTextBox_RightIconStyle-->
    <Style
        x:Key="NitaTextBoxRightIconStyle"
        BasedOn="{StaticResource {x:Type ni:Icon}}"
        TargetType="{x:Type ni:Icon}">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="SizeType" Value="{Binding SizeType, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Source" Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Visibility" Value="{Binding ContentMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type nita:TextBox}}, Converter={StaticResource ButtonModeConverter}, ConverterParameter=Icon}" />
        <Setter Property="Visibility" Value="{Binding IconPosition, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type nita:TextBox}}, Converter={StaticResource IconPositionToVisiblityConverter}, ConverterParameter=Right}" />
    </Style>
    <!--#endregion NitaTextBox_IconStyle-->

    <!--#region NitaButtonLabelStyle-->
    <Style
        x:Key="NitaTextBoxStyle"
        BasedOn="{StaticResource {x:Type TextBox}}"
        TargetType="{x:Type TextBox}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="2,0,0,0" />
        <Setter Property="Text" Value="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource DefaultBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource FlatBorder}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{Binding SizeType, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type nita:TextBox}}, Converter={StaticResource SizeTypeConverter}, ConverterParameter=Text}" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground, FallbackValue={StaticResource DefaultForeground}}" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="IsReadOnly" Value="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" />
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <!--#endregion NitaButtonLabelStyle-->

    <Style TargetType="{x:Type nita:TextBox}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type nita:TextBox}">
                    <nbo:Border
                        x:Name="PART_Border"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        BorderThickness="{DynamicResource FlatBorder}"
                        MouseOverStyle="{TemplateBinding MouseOverStyle}">
                        <DockPanel Margin="{DynamicResource FlatMargin}">
                            <Grid
                                x:Name="PART_Grid"
                                Margin="2"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ncc:ClickCanvas
                                    x:Name="PART_NitaClickCanvas"
                                    Grid.ColumnSpan="3"
                                    Width="{TemplateBinding Width}"
                                    AnimationDuration="0.7"
                                    ClickColor="{TemplateBinding ClickColor}"
                                    IsEnableClickStyle="false" />
                                <Border
                                    Grid.Column="0"
                                    HorizontalAlignment="Stretch">
                                    <ni:Icon
                                        x:Name="PART_Icon"
                                        Grid.Column="0"
                                        Style="{StaticResource NitaTextBoxLeftIconStyle}" />
                                </Border>
                                <TextBox
                                    x:Name="PART_Text"
                                    Grid.Column="1"
                                    Style="{StaticResource NitaTextBoxStyle}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="TextChanged">
                                            <i:InvokeCommandAction Command="{Binding TextChangedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type nita:TextBox}}}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>
                                <Border
                                    Grid.Column="2"
                                    HorizontalAlignment="Stretch">
                                    <ni:Icon
                                        x:Name="PART_IconRight"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        Style="{StaticResource NitaTextBoxRightIconStyle}" />
                                </Border>
                            </Grid>
                        </DockPanel>
                        <nbo:Border.ToolTip>
                            <ToolTip
                                Content="{TemplateBinding ToolTip}"
                                Style="{DynamicResource NitaToolTipStyle}"
                                Visibility="{TemplateBinding ToolTip,
                                                             Converter={StaticResource TooltipVisibilityConverter}}" />
                        </nbo:Border.ToolTip>
                    </nbo:Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion NitaTextBox-->
</ResourceDictionary>